{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/spring-boot-jpa-master-slave","webpackCompilationHash":"f19c4035ca0c56879aa8","result":{"data":{"markdownRemark":{"id":"cc80b435-a33b-5c16-8e75-abebf53bcc13","html":"<p>스프링 부트에서 JPA는 기본 셋팅은 1개의 datasource만 설정하게 되어 있다. 하지만, master / slave replication이 되어 있는 디비를 둘 다 연결하고 싶을 때에는 조금 까다롭게 설정해야 한다.<br>\n두 가지 방식 정도로 할 수 있는데, @Transactional방식과 @AOP를 이용한 방식이 있다. 일단 이 글에서는 Transactional방식을 먼저… </p>\n<p>build.gradle</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\">plugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">'org.springframework.boot'</span> version <span class=\"token string\">'2.1.6.RELEASE'</span>\n\tid <span class=\"token string\">'java'</span>\n<span class=\"token punctuation\">}</span>\n\napply plugin<span class=\"token punctuation\">:</span> <span class=\"token string\">'io.spring.dependency-management'</span>\n\ngroup <span class=\"token operator\">=</span> <span class=\"token string\">'com.mudchobo.example'</span>\nversion <span class=\"token operator\">=</span> <span class=\"token string\">'0.0.1-SNAPSHOT'</span>\nsourceCompatibility <span class=\"token operator\">=</span> <span class=\"token string\">'11'</span>\n\nconfigurations <span class=\"token punctuation\">{</span>\n\tcompileOnly <span class=\"token punctuation\">{</span>\n\t\textendsFrom annotationProcessor\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nrepositories <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n\timplementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-data-jpa'</span>\n\tcompileOnly <span class=\"token string\">'org.projectlombok:lombok'</span>\n\truntimeOnly <span class=\"token string\">'mysql:mysql-connector-java'</span>\n\tannotationProcessor <span class=\"token string\">'org.projectlombok:lombok'</span>\n\ttestImplementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-test'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>application.properties</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">spring.datasource.master.jdbc-url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:mysql://localhost:3306/master?serverTimezone=Asia/Seoul</span>\n<span class=\"token attr-name\">spring.datasource.master.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">root</span>\n<span class=\"token attr-name\">spring.datasource.master.password</span><span class=\"token punctuation\">=</span>\n<span class=\"token attr-name\">spring.datasource.slave.jdbc-url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:mysql://localhost:3306/slave?serverTimezone=Asia/Seoul</span>\n<span class=\"token attr-name\">spring.datasource.slave.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">root</span>\n<span class=\"token attr-name\">spring.datasource.slave.password</span><span class=\"token punctuation\">=</span>\n<span class=\"token attr-name\">spring.jpa.database</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">mysql</span>\n<span class=\"token attr-name\">spring.jpa.hibernate.use-new-id-generator-mappings</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">false</span>\n<span class=\"token attr-name\">spring.jpa.show-sql</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">true</span>\n<span class=\"token attr-name\">spring.jpa.hibernate.ddl-auto</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">create-drop</span></code></pre></div>\n<p>slave에 아래 테이블과 데이터를 넣어서 마스터랑 슬레이브를 테스트를 위해 구분하자. 마스터테이블은 create-drop으로 생성.  </p>\n<p>test.sql</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> hello <span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">bigint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\nworld <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">engine</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token punctuation\">`</span>slave<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>hello<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>world<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'jared.s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Transactional readOnly에 따라 분기하는 CustomRoutingDataSource  </p>\n<p>ReplicationRoutingDataSource.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReplicationRoutingDataSource</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractRoutingDataSource</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">determineCurrentLookupKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">TransactionSynchronizationManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">isCurrentTransactionReadOnly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">?</span> <span class=\"token string\">\"slave\"</span>\n                <span class=\"token operator\">:</span> <span class=\"token string\">\"master\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마스터 데이터소스와 슬레이브 데이터소스를 정의하고, 그걸 분기하는걸 만들어놓은 설정이다.</p>\n<p>DataSourceConfig.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableAutoConfiguration</span><span class=\"token punctuation\">(</span>exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">DataSourceAutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@EnableTransactionManagement</span>\n<span class=\"token annotation punctuation\">@EnableJpaRepositories</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.mudchobo.example.masterslave\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataSourceConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.master\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">masterDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DataSourceBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HikariDataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.slave\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">slaveDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DataSourceBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HikariDataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">routingDataSource</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"masterDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> masterDataSource<span class=\"token punctuation\">,</span>\n                                        <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"slaveDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> slaveDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> routingDataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReplicationRoutingDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> dataSourceMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dataSourceMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"master\"</span><span class=\"token punctuation\">,</span> masterDataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dataSourceMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"slave\"</span><span class=\"token punctuation\">,</span> slaveDataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        routingDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetDataSources</span><span class=\"token punctuation\">(</span>dataSourceMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        routingDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultTargetDataSource</span><span class=\"token punctuation\">(</span>masterDataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> routingDataSource<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"routingDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> routingDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LazyConnectionDataSourceProxy</span><span class=\"token punctuation\">(</span>routingDataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>기본 DataSource 설정을 제외하고 커스텀한걸로 @Bean으로 만들어서 바꿈.</p>\n<p>Hello.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@Builder</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span>\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Column</span>\n    <span class=\"token class-name\">String</span> world<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>HelloRepository.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HelloRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>HelloService.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Transactional</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HelloRepository</span> helloRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HelloService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloRepository</span> helloRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helloRepository <span class=\"token operator\">=</span> helloRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> helloRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Hello</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hello</span> hello<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> helloRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>슬레이브 서비스에는 readOnly=true를 넣는다.</p>\n<p>HelloSlaveService.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloSlaveService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HelloRepository</span> helloRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HelloSlaveService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloRepository</span> helloRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helloRepository <span class=\"token operator\">=</span> helloRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> helloRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>샘플로 save 후 helloService에서 가져올 때와 helloSlaveService에서 가져올 때 로그를 찍었다.</p>\n<p>MasterSlaveApplication.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MasterSlaveApplication</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MasterSlaveApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Bean</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">CommandLineRunner</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloService</span> helloService<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HelloSlaveService</span> helloSlaveService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> args <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">var</span> savedHello <span class=\"token operator\">=</span> helloService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">world</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mudchobo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"savedHello = {}\"</span><span class=\"token punctuation\">,</span> savedHello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">var</span> hello1 <span class=\"token operator\">=</span> helloService<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello1 = {}\"</span><span class=\"token punctuation\">,</span> hello1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">var</span> hello2 <span class=\"token operator\">=</span> helloSlaveService<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello2 = {}\"</span><span class=\"token punctuation\">,</span> hello2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">savedHello <span class=\"token operator\">=</span> Hello<span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span>1, world<span class=\"token operator\">=</span>mudchobo<span class=\"token punctuation\">)</span>\nhello1 <span class=\"token operator\">=</span> Optional<span class=\"token punctuation\">[</span>Hello<span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span>1, world<span class=\"token operator\">=</span>mudchobo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nhello2 <span class=\"token operator\">=</span> Optional<span class=\"token punctuation\">[</span>Hello<span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span>1, world<span class=\"token operator\">=</span>jared.s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>이 방식의 단점은 쓸데없이 @Transactional을 붙여야 한다. 이걸 붙이지 않으면, findById만 하는 곳에서는 readOnly로 취급해서 무조건 slave를 가져오게 된다. 그래서 AOP방식으로 쓰는 게 더 나을 것 같다.\n</p>","fields":{"slug":"/posts/spring-boot-jpa-master-slave","tagSlugs":["/tag/spring-boot/","/tag/jpa/","/tag/my-sql/","/tag/java/"]},"frontmatter":{"date":"2019-07-31T00:00:00.000+0900","description":"Spring Boot JPA에서 기본은 master로 처리하고, 원할 때 slave로 처리하자.","tags":["Spring Boot","JPA","MySQL","Java"],"title":"Spring Boot JPA - master slave 분기 처리 - transactional 방식"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/spring-boot-jpa-master-slave"}}}