{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/spring-boot-jpa-mysql-comment","webpackCompilationHash":"3144462fb773e6dbd74c","result":{"data":{"markdownRemark":{"id":"a313135f-16dc-5450-bf24-8d3f6eeb1a12","html":"<p>JPA에서는 comment를 따로 지원하지 않는다. 이게 이유를 찾아보니 일부 데이터베이스가 컬럼 comment를 지원하지 않는 것 같다. 하지만, MySQL에 comment를 달아두고 싶었다(사내 보안 정책이 꼭 달아야한다고 해서 기록해둘라고…)  </p>\n<p>columnDifinition 속성을 이용하면 된다. 그리고 OneToMany관계에 있는 칼럼에 comment를 달고 싶다면 JoinColumn을 활용하면 된다.  </p>\n<p>사람1 : 폰N 을 구성하려면 아래와 같이 하면 된다.</p>\n<p>Person.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Column</span><span class=\"token punctuation\">(</span>columnDefinition <span class=\"token operator\">=</span> <span class=\"token string\">\"varchar(10) not null comment '이름'\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@OneToMany</span>\n    <span class=\"token annotation punctuation\">@JoinColumn</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"person_id\"</span><span class=\"token punctuation\">,</span> columnDefinition <span class=\"token operator\">=</span> <span class=\"token string\">\"bigint not null comment '사람 아이디'\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Phone</span><span class=\"token punctuation\">></span></span> phones<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Phone.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Phone</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Column</span><span class=\"token punctuation\">(</span>columnDefinition <span class=\"token operator\">=</span> <span class=\"token string\">\"varchar(10) not null comment '휴대폰 이름'\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아래와 같이 DDL이 생김.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> test<span class=\"token punctuation\">.</span>person\n<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">bigint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n\t\t<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'이름'</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">engine</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> test<span class=\"token punctuation\">.</span>phone\n<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">bigint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n\t\t<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'휴대폰 이름'</span><span class=\"token punctuation\">,</span>\n\tperson_id <span class=\"token keyword\">bigint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'사람 아이디'</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">engine</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">index</span> FKs31jcc7fn0j8g0j9truq1fj23\n\t<span class=\"token keyword\">on</span> test<span class=\"token punctuation\">.</span>phone <span class=\"token punctuation\">(</span>person_idddd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/spring-boot-jpa-mysql-comment","tagSlugs":["/tag/spring-boot/","/tag/jpa/","/tag/my-sql/","/tag/java/"]},"frontmatter":{"date":"2019-07-04T00:00:00.000+0900","description":"Spring Boot JPA를 이용해서 MySQL 칼럼에 comment를 달자.","tags":["Spring Boot","JPA","MySQL","Java"],"title":"Spring Boot JPA - MySQL 컬럼 주석 달기."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/spring-boot-jpa-mysql-comment"}}}