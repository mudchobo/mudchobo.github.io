{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/spring-boot-jpa-multiple-database","webpackCompilationHash":"15278455c0074d530857","result":{"data":{"markdownRemark":{"id":"28b4cf40-fb1d-5090-bb5b-4a011e2c9c18","html":"<p>리플리케이션 되어 있는 디비에서 서비스쪽에서는 전부 마스터, 통계와 같이 슬로우쿼리가 걸리는 애들은 슬레이브로 쿼리를 날리기 위해서 여기까지 왔다. 역시 이 방법이 제일 맘에 드는 것 같다.<br>\n일단 db1: master, db2: slave로 해서 multiple database 설정.</p>\n<h3 id=\"설정파일\"><a href=\"#%EC%84%A4%EC%A0%95%ED%8C%8C%EC%9D%BC\" aria-label=\"설정파일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정파일</h3>\n<p>application.properties</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">spring.datasource.master.jdbc-url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:mysql://localhost:3306/master?serverTimezone=Asia/Seoul</span>\n<span class=\"token attr-name\">spring.datasource.master.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">root</span>\n<span class=\"token attr-name\">spring.datasource.master.password</span><span class=\"token punctuation\">=</span>\n<span class=\"token attr-name\">spring.datasource.slave.jdbc-url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:mysql://localhost:3306/slave?serverTimezone=Asia/Seoul</span>\n<span class=\"token attr-name\">spring.datasource.slave.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">root</span>\n<span class=\"token attr-name\">spring.datasource.slave.password</span><span class=\"token punctuation\">=</span>\n<span class=\"token attr-name\">spring.jpa.database</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">mysql</span>\n<span class=\"token attr-name\">spring.jpa.hibernate.use-new-id-generator-mappings</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">false</span>\n<span class=\"token attr-name\">spring.jpa.show-sql</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">true</span>\n<span class=\"token attr-name\">spring.jpa.hibernate.ddl-auto</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">create-drop</span></code></pre></div>\n<p>마스터와 슬레이브가 다른지 테스트해봐야하니까 슬레이브에 테스트 데이터를 넣는다.</p>\n<p>test.sql</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> hello <span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">bigint</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\nworld <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">engine</span><span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token punctuation\">`</span>slave<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>hello<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>world<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'jared.s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"도메인-생성-패키지-중요\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%83%9D%EC%84%B1-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%A4%91%EC%9A%94\" aria-label=\"도메인 생성 패키지 중요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도메인 생성 (패키지 중요)</h3>\n<p>db와 연결할 엔티티를 작성해야하는데, db가 2개인데 다르면 다른패키지로 쓰면 되고 master/slave처럼 같으면 같은 패키지로 써도 된다.<br>\ndomain.Hello.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@Builder</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span>\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token keyword\">long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Column</span>\n    <span class=\"token class-name\">String</span> world<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"repository-생성-패키지-중요\"><a href=\"#repository-%EC%83%9D%EC%84%B1-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%A4%91%EC%9A%94\" aria-label=\"repository 생성 패키지 중요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository 생성 (패키지 중요)</h3>\n<p>이 Repository 위치를 구분해서 마스터 / 슬레이브를 구분할 수 있다.<br>\nmasterrepository.HelloRepository.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HelloRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>slaverepository.HelloSlaveRepository.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HelloSlaveRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrudRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"master-datasource-설정\"><a href=\"#master-datasource-%EC%84%A4%EC%A0%95\" aria-label=\"master datasource 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>master datasource 설정</h3>\n<p>여기서 커스텀 datasource, entityManagerFactory 등을 설정.<br>\nbasePackages에 repository 패키지를 쓰면 되고, entityManagerFactory에서 엔티티 패키지를 지정해주면 된다. 그리고 꼭 @Primary를 붙여야 되더라.</p>\n<p>MasterDataSourceConfig.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableJpaRepositories</span><span class=\"token punctuation\">(</span>\n        basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"com.mudchobo.examples.multipledatabase.masterrepository\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MasterDataSourceConfig</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">JpaProperties</span> jpaProperties<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HibernateProperties</span> hibernateProperties<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MasterDataSourceConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JpaProperties</span> jpaProperties<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateProperties</span> hibernateProperties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jpaProperties <span class=\"token operator\">=</span> jpaProperties<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hibernateProperties <span class=\"token operator\">=</span> hibernateProperties<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.master\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">masterDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DataSourceBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HikariDataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalContainerEntityManagerFactoryBean</span> <span class=\"token function\">entityManagerFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityManagerFactoryBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> properties <span class=\"token operator\">=</span> hibernateProperties<span class=\"token punctuation\">.</span><span class=\"token function\">determineHibernateProperties</span><span class=\"token punctuation\">(</span>\n                jpaProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HibernateSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">masterDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mudchobo.examples.multipledatabase.domain\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">persistenceUnit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"master\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityManagerFactoryBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JpaTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span><span class=\"token function\">entityManagerFactory</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>슬레이브 설정은 비슷한데, repository경로는 Slave쪽으로 바꾸면 된다. entity는 같은걸 쓸거니 같은 패키지를 보면 된다. entityManagerFactory, transactionManager는 기본값이 아닌 슬레이브껄로 사용하게 바꾸면 된다.  </p>\n<p>SlaveDataSourceConfig.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableJpaRepositories</span><span class=\"token punctuation\">(</span>\n        basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"com.mudchobo.examples.multipledatabase.slaverepository\"</span><span class=\"token punctuation\">,</span>\n        entityManagerFactoryRef <span class=\"token operator\">=</span> <span class=\"token string\">\"slaveEntityManagerFactory\"</span><span class=\"token punctuation\">,</span>\n        transactionManagerRef <span class=\"token operator\">=</span> <span class=\"token string\">\"slaveTransactionManager\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SlaveDataSourceConfig</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">JpaProperties</span> jpaProperties<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HibernateProperties</span> hibernateProperties<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SlaveDataSourceConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JpaProperties</span> jpaProperties<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateProperties</span> hibernateProperties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jpaProperties <span class=\"token operator\">=</span> jpaProperties<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hibernateProperties <span class=\"token operator\">=</span> hibernateProperties<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.slave\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">slaveDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DataSourceBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HikariDataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalContainerEntityManagerFactoryBean</span> <span class=\"token function\">slaveEntityManagerFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityManagerFactoryBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        hibernateProperties<span class=\"token punctuation\">.</span><span class=\"token function\">setDdlAuto</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> properties <span class=\"token operator\">=</span> hibernateProperties<span class=\"token punctuation\">.</span><span class=\"token function\">determineHibernateProperties</span><span class=\"token punctuation\">(</span>\n                jpaProperties<span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HibernateSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">slaveDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mudchobo.examples.multipledatabase.domain\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">persistenceUnit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"master\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token function\">slaveTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityManagerFactoryBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JpaTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span><span class=\"token function\">slaveEntityManagerFactory</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>MultipleDatabaseApplication.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@EnableTransactionManagement</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MultipleDatabaseApplication</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipleDatabaseApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CommandLineRunner</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloRepository</span> helloRepository<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HelloSlaveRepository</span> helloSlaveRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> args <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> savedHello <span class=\"token operator\">=</span> helloRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hello</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">world</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mudchobo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"savedHello = {}\"</span><span class=\"token punctuation\">,</span> savedHello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> masterHello <span class=\"token operator\">=</span> helloRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"masterHello = {}\"</span><span class=\"token punctuation\">,</span> masterHello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> slaveHello <span class=\"token operator\">=</span> helloSlaveRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"slaveHello = {}\"</span><span class=\"token punctuation\">,</span> slaveHello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">savedHello = Hello(id=1, world=mudchobo)\nmasterHello = Optional[Hello(id=1, world=mudchobo)]\nslaveHello = Optional[Hello(id=1, world=jared.s)]</code></pre></div>\n<h3 id=\"예제-github\"><a href=\"#%EC%98%88%EC%A0%9C-github\" aria-label=\"예제 github permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 github</h3>\n<p><a href=\"https://github.com/mudchobo/mudchobo-examples/tree/master/multiple-database\" target=\"_blank\">https://github.com/mudchobo/mudchobo-examples/tree/master/multiple-database</a>  </p>\n<p>끗.</p>","fields":{"slug":"/posts/spring-boot-jpa-multiple-database","tagSlugs":["/tag/spring-boot/","/tag/jpa/","/tag/my-sql/","/tag/java/"]},"frontmatter":{"date":"2019-08-01T00:00:00.000+0900","description":"Spring Boot JPA에서 여러 개의 데이터베이스를 연동 셋팅. 이 구조로 master / slave 처리도 할 수 있음.","tags":["Spring Boot","JPA","MySQL","Java"],"title":"Spring Boot JPA - multiple database 설정."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/spring-boot-jpa-multiple-database"}}}